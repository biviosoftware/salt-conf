#
# Default configuration for salt/jupyterhub.sls
#
# Use scripts/jupyterhub_secret.py to generate passwords and (fake) OAuth keys
#
{% set zz = dict(
    guest_notebook_d='/home/' + stack.jupyter.guest_user + '/jupyter',
    host_notebook_d=stack.jupyter.root_notebook_d + '/{username}',
    jupyterhub_conf_f='jupyterhub_config.py',
    jupyterhub_guest_conf_d='/srv/jupyterhub/conf',
    jupyterhub_host_conf_d='/var/lib/jupyterhub/conf',
    postgresql_name='postgresql-jupyterhub'
) %}
{% set _dummy = zz.update(
    postgresql_host_home_d='/var/lib/' + zz.postgresql_name,
) %}

state_trees:
  jupyterhub:
    - utilities
    - jupyter

radia:
  cluster_start:
    host_root_d_fmt: '{{ zz.host_notebook_d }}'
    guest_root_d_fmt: '{{ zz.guest_notebook_d }}'
    image_name: '{{ stack.jupyter.image_name }}'

jupyterhub:
  authenticator_class: oauthenticator.GitHubOAuthenticator
  aux_contents: ""
  debug: true
  guest_conf_d: '{{ zz.jupyterhub_guest_conf_d }}'
  guest_conf_f: '{{ zz.jupyterhub_guest_conf_d }}/{{ zz.jupyterhub_conf_f }}'
  guest_notebook_d: '{{ zz.guest_notebook_d }}'
  guest_port: 8000
  guest_user: root
  host_conf_d: '{{ zz.jupyterhub_host_conf_d }}'
  host_conf_f: '{{ zz.jupyterhub_host_conf_d }}/{{ zz.jupyterhub_conf_f }}'
  host_name: localhost
  host_notebook_d: '{{ zz.host_notebook_d }}'
  host_port: 8000
  host_user: root
  image_name: radiasoft/jupyterhub
  postgresql_host_data_d: '{{ zz.postgresql_host_home_d }}/data'
  postgresql_host_home_d: '{{ zz.postgresql_host_home_d }}'
  postgresql_host_run_d: '{{ zz.postgresql_host_home_d }}/run'
  postgresql_image: 'radiasoft/{{ zz.postgresql_name }}'
  postgresql_name: '{{ zz.postgresql_name }}'
